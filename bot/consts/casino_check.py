from enum import Enum
from typing import List


class Slot(Enum):
    BAR = "‚ûñ"
    GRAPES = "üçá"
    LEMON = "üçã"
    SEVEN = "7Ô∏è‚É£"

    def __str__(self):
        return self.value


dices = [Slot.BAR, Slot.GRAPES, Slot.LEMON, Slot.SEVEN]


def get_casino_text(dice_value):
    result = parse_dice(dice_value)

    for condition, reward in SLOTS_TEXT.items():
        if condition(result):
            return reward

    return '–ù–µ –ø–æ—â–∞—Å—Ç–∏–ª–æ :('


def two_near(x):
    return lambda slot_result: slot_result.count(x) == 2 and slot_result[1] == x


def two(x):
    return lambda slot_result: slot_result.count(x) == 2 and slot_result[1] != x


def three(x):
    return lambda slot_result: slot_result.count(x) == 3


def parse_dice(dice_value: int) -> List[Slot]:
    dice_value -= 1
    return [
        dices[dice_value // i % 4]
        for i in (1, 4, 16)
    ]


SLOTS_TEXT = {
    three(Slot.SEVEN): 'ü§ë <b>–î–∂–µ–∫–ø–æ—Ç!</b> ü§ë',
    three(Slot.LEMON): '–¢—Ä–∏ –≤ —Ä—è–¥ üçã',
    three(Slot.GRAPES): '–¢—Ä–∏ –≤ —Ä—è–¥ üçá',
    three(Slot.BAR): '–¢—Ä–∏ –≤ —Ä—è–¥ ‚ûñ',

    two_near(Slot.SEVEN): '–î–≤–∞ –ø–æ—Ä—É—á 7Ô∏è‚É£',
    two_near(Slot.GRAPES): '–î–≤–∞ –ø–æ—Ä—É—á üçá',
    two_near(Slot.LEMON): '–î–≤–∞ –ø–æ—Ä—É—á üçã',
    two_near(Slot.BAR): '–î–≤–∞ –ø–æ—Ä—É—á ‚ûñ',

    two(Slot.SEVEN): '–î–≤–∞ 7Ô∏è‚É£',
    two(Slot.GRAPES): '–î–≤–∞ üçá',
    two(Slot.LEMON): '–î–≤–∞ üçã',
    two(Slot.BAR): '–î–≤–∞ ‚ûñ',
}


if __name__ == '__main__':
    x = get_casino_text(45, SLOTS_TEXT)
    print(x)
